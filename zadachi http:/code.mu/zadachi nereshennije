//С помощью двух вложенных циклов выведите на экран следующую строку:

11 12 13 21 22 23 31 32 33



// Дан следующий объект с работниками и их зарплатами. Увеличьте зарплату каждого работника на 10%.

let obj = {
employee1: 100,
employee2: 200,
employee3: 300,
employee4: 400,
employee5: 500,
employee6: 600,
employee7: 700,
};


Дана строка. Подсчитайте сколько раз в ней встречается каждый из ее символов.


let str = 'YA liubliu svoju stranu';
let arr=str.split('')
console.log(arr)
let obj={}

 for (let key of arr) {
if (key=== undefined){
obj[key]=+1;
}
else {
obj[key]++
}
}


Реализуйте функцию getDivisors, которая параметром будет принимать число и возвращать массив его делителей, то есть чисел, на которое делится наше число. К примеру, если мы передадим число 24 - мы должны получить следующий массив:

[1, 2, 3, 4, 6, 8, 12, 24] */

let getDivisors = (numb)=> {
let str=Number(numb)
let arr=[]
for (let i=0; i<numb; i++) {
if (str%i==0) {
arr.push(i)
}
}
return arr;
}
console.log(getDivisors(9))

console.log(obj) 

// Дан массив с числами. Переберите его циклом и в каждой итерации цикла выведите сумму предыдущего, текущего и следующего элементов массива.

let arr = [1, 2, 3];
let sum=0;

for (let i = 0; i < arr.length-1; i++) {
sum= arr[i-1] + arr[i+1] + arr[i]
}

console.log(sum)

//Получение чисел Фибоначчи в JavaScript

let one = 0;
let two = 1;

for (let i = 1; i <= 10; i++) {
	let current = one + two;
	
	one = two;
	two = current;
	
	console.log(current);
}

/* Сделайте функцию delElem, которая параметрами будет принимать значение и массив и удалять из массива все элементы с таким значением. */

let delElem = (num, arr) => {

for (let i=0; i<arr.length; i++) {
if (arr[i]===num) {
 arr.splice(i, 1)
}
}
return arr
}
console.log(delElem ('fgh4' , ['2ad', '3fgh' , 'fgh4']))


///Задача 4js.Pm.FP.FrNm

Сделайте функцию getFreindly, которая будет находить пары дружественных чисел в заданном промежутке и возвращать их в виде двухмерного массива вида следующего вида:

[ [220, 284], [1184, 1210], [2620, 2924] ]
С помощью созданной функции найдите все пары дружественных чисел на промежутке от 1 до 3000.

///Задача 5js.Pm.FP.FrNm

Совершенное число - целое число, равное сумме всех своих собственных делителей (то есть всех положительных делителей, отличных от самого числа). Сделайте функцию getPerfect, которая будет находить совершенные числа в заданном диапазоне. Проверьте работу функции в промежутке от 1 до 1000.




/////Пусть у нас даны два массива:

let arr1 = [1, 2, 3];
let arr2 = [2, 3, 4, 5];
Можно заметить, что числа 1, 4 и 5 не присутствуют одновременно в обоих массивах. Такие элементы называются разностью массивов.

Давайте функцию getDiff, которая будет находить разность двух массивов.
/////

let arr3 = [1, 2, 3];
let arr4 = [2, 3, 4, 5];


let inArray= (elem, arr) => {
return arr.indexOf(elem) !== -1
}

let getFirstDiff= (arr1,arr2) => {
let result=[]
for (let elem of arr1){
if (!inArray(elem,arr2)) {
result.push(elem)
}
}
return result
}

let getDiff= (arr1,arr2) => {
let first=getFirstDiff(arr1,arr2)
let second=getFirstDiff(arr2,arr1)
return [].concat(first,second)
}

console.log(getDiff(arr3,arr4))

